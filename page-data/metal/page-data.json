{"componentChunkName":"component---src-components-chapter-js","path":"/metal","result":{"data":{"markdownRemark":{"html":"<h1 id=\"what-is-it\" style=\"position:relative;\"><a href=\"#what-is-it\" aria-label=\"what is it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is it?</h1>\n<p>Metal.js é uma biblioteca de Javascript para criação de componentes de frontend assim como um grande compilado de vários utilitários para lidar com a DOM e controlar estado(metal-state), eventos(metal-events) ou ajudar em construção de UIs difíceis(e.g metal-drag-drop). Existem vários utilitários disponíveis para várias coisas, incluindo URLs, routing. </p>\n<h3 id=\"antes-de-começar\" style=\"position:relative;\"><a href=\"#antes-de-come%C3%A7ar\" aria-label=\"antes de começar permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Antes de começar:</h3>\n<p>Entretanto o projeto do Metal está em fase de <strong>manutenção/deprecação</strong>. Vários utilitários foram/estão sendo movidos para o código do DXP e issues dentro da própria biblioteca para criação de componentes só estão sendo fixados quando existe uma severidade muito grande.</p>\n<h3 id=\"vamos-lá-como-assim-biblioteca-para-criar-componentes-de-frontend\" style=\"position:relative;\"><a href=\"#vamos-l%C3%A1-como-assim-biblioteca-para-criar-componentes-de-frontend\" aria-label=\"vamos lá como assim biblioteca para criar componentes de frontend permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vamos lá, como assim biblioteca para criar componentes de frontend?</h3>\n<p>O metal auxilia em fazer com que os componentes sejam atualizados assim que um dado é atualizado, de maneira geral, é uma forma de fazer two-way data binding.</p>\n<p>Metal pode utilizar tanto Soy(Google Closure Templates) quanto JSX como linguagem de template.</p>\n<p>Para entender mais sobre Soy, é recomendado a pasta de exemplos no repositório do closure-templates: <a href=\"https://github.com/google/closure-templates/tree/master/examples\">closure-templates/examples at master · google/closure-templates · GitHub</a></p>\n<p>Quando um dado é passado para o componente, o template renderiza somente as partes que realmente precisam ser atualizadas, o mecanismo que faz com que isso aconteça é o IncrementalDOM(<a href=\"https://google.github.io/incremental-dom/\">incremental-dom | An in-place DOM diffing library</a>)</p>\n<h3 id=\"incrementaldom\" style=\"position:relative;\"><a href=\"#incrementaldom\" aria-label=\"incrementaldom permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IncrementalDOM</h3>\n<p>O incrementalDOM é uma biblioteca para representar e aplicar modificações na DOM. O que acontece nele é que se faz uso de chamadas de Javascript para representar esses nós da arvore e a biblioteca faz com que aconteça a operação de diff, de maneira incremental, em cima da própria DOM, diferente do React que usa uma DOM em memória chamada virtualDOM.</p>\n<p>O incrementalDOM não é utilizado de maneira direta. São usados várias ferramentas como metal-tools-soy e plugins de babel(no caso de JSX) para converter os templates em chamadas de incrementalDOM e a partir disso, o metal consegue interceptar e fazer mudanças em cima do IncrementalDOM.</p>\n<p>Para saber mais sobre IncrementalDOM, veja o link a seguir:\n<a href=\"https://google.github.io/incremental-dom/#why-incremental-dom\">incremental-dom | An in-place DOM diffing library</a></p>\n<h3 id=\"ciclo-de-vida\" style=\"position:relative;\"><a href=\"#ciclo-de-vida\" aria-label=\"ciclo de vida permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ciclo de Vida</h3>\n<p>Você provavelmente irá querer executar alguma coisa ou tratar seus dados no seu componente. Para isso, temos os ciclos de vida do metal.js, em que existem vários disponíveis e você pode encontrar mais informação aqui: <a href=\"http://metaljs.com/docs/guides/component-lifecycle.html\">Component Lifecycle - Metal.js</a></p>\n<h3 id=\"renderização\" style=\"position:relative;\"><a href=\"#renderiza%C3%A7%C3%A3o\" aria-label=\"renderização permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Renderização</h3>\n<p>Você pode usar as linguagens de template descritas acima, quanto você pode usar Javascript puro para renderizar componentes de Metal. Todos os componentes são instanciáveis, visto que são objetos e pode-se passar valores para esses num objeto de configuração como o exemplo abaixo:\n<code class=\"language-text\">new Modal(data, &#39;#parentElement&#39;);</code></p>\n<p>Em que no primeiro argumento é o objeto citado(que foi chamado de <code class=\"language-text\">data</code>) e o segundo é o seletor para o metal dar o replace no elemento da DOM existente e dar o bootstrap da aplicação.</p>\n<p>Mais informações:\n<a href=\"http://metaljs.com/docs/guides/rendering-components.html\">Rendering Components - Metal.js</a></p>\n<h3 id=\"eventos\" style=\"position:relative;\"><a href=\"#eventos\" aria-label=\"eventos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Eventos</h3>\n<p>Eventos podem ser atachados a componentes de metal das 3 formas descritas no tutorial abaixo:</p>\n<p><a href=\"http://metaljs.com/docs/guides/inline-events.html\">Inline Events - Metal.js</a></p>\n<h3 id=\"mais-informações\" style=\"position:relative;\"><a href=\"#mais-informa%C3%A7%C3%B5es\" aria-label=\"mais informações permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mais informações</h3>\n<p>Para mais informações sobre Metal, acesse a seguinte documentação:</p>\n<p><a href=\"http://metaljs.com/docs/guides/\">http://metaljs.com/docs/guides/</a></p>\n<p>Para informações sobre utilitários ou como saber como o metal.js funciona internamente, você pode acessar a seguinte URL: </p>\n<p><a href=\"https://github.com/metal/metal-training/tree/master/docs/metal.js\">https://github.com/metal/metal-training/tree/master/docs/metal.js</a></p>","frontmatter":{"order":7,"path":"/metal","title":"Metal.js"}}},"pageContext":{}}}