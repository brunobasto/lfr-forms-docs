{"componentChunkName":"component---src-components-chapter-js","path":"/layout-provider","result":{"data":{"markdownRemark":{"html":"<h1 id=\"what-is-it\" style=\"position:relative;\"><a href=\"#what-is-it\" aria-label=\"what is it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is it?</h1>\n<h2 id=\"draft\" style=\"position:relative;\"><a href=\"#draft\" aria-label=\"draft permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Draft</h2>\n<h1 id=\"localização\" style=\"position:relative;\"><a href=\"#localiza%C3%A7%C3%A3o\" aria-label=\"localização permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Localização</h1>\n<p>Você pode encontrar códigos do User View no módulo <code class=\"language-text\">dynamic-data-mapping-form-renderer</code> e a parte do Builder, analogamente ao módulo <code class=\"language-text\">dynamic-data-mapping-form-builder</code> assim como a parte de Regras.</p>\n<h1 id=\"como-funciona-a-integração-do-form-builder-com-a-user-view\" style=\"position:relative;\"><a href=\"#como-funciona-a-integra%C3%A7%C3%A3o-do-form-builder-com-a-user-view\" aria-label=\"como funciona a integração do form builder com a user view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Como funciona a integração do Form Builder com a User View?</h1>\n<p>Como já foi abordado anteriormente, o Form Builder é responsável para criar estruturas para serem renderizadas usando o User View, mas como isso acontece?</p>\n<p>No Forms, é seguido o padrão de Redux em que existem ações como <code class=\"language-text\">fieldAdded</code> que partindo da Sidebar(Builder) fala para a store do Forms(LayoutProvider) que um field novo foi adicionado em determinada região e o valor é atualizado no User View.</p>\n<p>Como por exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>\n  ‘fieldAdded’’<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    pageIndex<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    rowIndex<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    columnIndex<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    fieldType<span class=\"token operator\">:</span> ‘text’\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Enquanto no Layout Provider, ele recebe dados vindo dessa ação da seguinte forma:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>‘fieldAdded’<span class=\"token punctuation\">,</span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>pages<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>pageIndex<span class=\"token punctuation\">,</span> rowIndex<span class=\"token punctuation\">,</span> columnIndex<span class=\"token punctuation\">,</span> fieldType<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Realiza a operação de adicionar um field no local especificado pelo evento</span>\n    pages<span class=\"token punctuation\">[</span>pageIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">[</span>rowIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">[</span>columnIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">createField</span><span class=\"token punctuation\">(</span>fieldType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// Atualiza estado da aplicação. Isso faz com que haja uma renderização da aplicação e o novo field deverá aparecer no Form Builder</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>pages<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>No Forms, existem várias ações disponíveis. Você terá mais detalhes na parte de LayoutProvider(#9).</p>","frontmatter":{"order":9,"path":"/layout-provider","title":"Layout Provider"}}},"pageContext":{}}}